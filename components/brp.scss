
/**
 * Media query for orientation landscape
 */
@mixin landscape {
	@media screen and (orientation:landscape) {
		@content;
	}
}

/**
 * Media query for orientation portrait
 */
@mixin portrait {
	@media screen and (orientation:portrait) {
		@content;
	}
}

/**
 * Creates a media-query with min-/max-width
 */
@mixin brp-media-query($min:false, $max:false) {

	@if $min ==false and $max != false {
		@media (max-width: $max - 1px) {
			@content;
		}
	}

	@if $min != false and $max != false {
		@media (min-width:$min) and (max-width: $max - 1px) {
			@content;
		}
	}

	@if $min !=false and $max == false {
		@media (min-width: $min) {
			@content;
		}
	}
}


/**
 * Creates a media-query for the breakpoint-width of $index
 */
@mixin brp($index) {

	@if $index == length($breakpoints) + 1 {
		@include brp-range($index - 1, false) {
			@content;
		}
	} @else {
		@include brp-range($index - 1, $index) {
			@content;
		}
	}

}


/**
 * Creates a media-query for the breakpoints smaller than the width of $index
 */
@mixin brp-before($index) {
	@include brp-range(false, $index) {
		@content;
	}
}

/**
 * Creates a media-query for the breakpoints larger than the width of $index
 */
@mixin brp-after($index) {
	@include brp-range($index, false) {
		@content;
	}
}



/**
 * Creates a media-query for the breakpoints between the widths of $min- and $max-index
 */
@mixin brp-range($min:false, $max:false) {

	@if $min != false and $min < 1 { $min: false; }
	@if $max != false and $max >= length($breakpoints)+1 { $max:false; }


	@if $min != false {
		$min: nth($breakpoints, $min);
	}

	@if $max != false {
		$max: nth($breakpoints, $max);
	}


	@include brp-media-query($min, $max) {
		@content;
	}

}


@function brp-width($index) {
	@return nth($breakpoints, $index);
}
